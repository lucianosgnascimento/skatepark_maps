@model IEnumerable<ProjetoPista.Model.Dtos.PistaDto>

@{ ViewData["Title"] = "Painel Administrativo 1.0"; }

<style>
    body {
        width: 100%;
        height: 100%;
        margin: 0;
    }

    h1, h2, h3, h4, h5, h6 {
        letter-spacing: 0px;
        font-weight: 500;
        color: #2e3133;
        margin: 0px 0px 15px 0px;
        font-family: 'Poppins', sans-serif;
    }

    h1 {
        font-size: 40px;
        line-height: 52px;
    }

    h2 {
        font-size: 32px;
        line-height: 42px;
    }

    h3 {
        font-size: 24px;
        line-height: 34px;
    }

    h4 {
        font-size: 22px;
        line-height: 32px;
    }

    h5 {
        font-size: 16px;
        line-height: 20px;
    }

    h6 {
        font-size: 14px;
        line-height: 18px;
    }

    p {
        margin: 0 0 20px;
        line-height: 1.7;
    }

        p:last-child {
            margin: 0px;
        }

    ul, ol {
        list-style: none;
        margin: 0;
        padding: 0;
    }

    a {
        text-decoration: none;
        color: #777b80;
        -webkit-transition: all 0.3s;
        -moz-transition: all 0.3s;
        transition: all 0.3s;
    }

        a:focus, a:hover {
            text-decoration: none;
            color: #023981;
        }

    .btn-link {
        color: #304496;
        font-size: 14px;
        font-weight: 700;
        text-transform: uppercase;
        -webkit-transition: all 0.3s;
        -moz-transition: all 0.3s;
        transition: all 0.3s;
        position: relative;
        letter-spacing: 0px;
        border-bottom: 1px solid #304496;
    }

        .btn-link:hover {
            color: #263679;
            text-decoration: none;
            border-bottom: 1px solid #263679;
        }

    #map_wrapper {
        z-index: -1;
        position: absolute;
        height: 100%;
        width: 100%;
        padding: 0px;
        border-width: 0px;
        margin: 0px;
        left: 0px;
        top: 0px;
    }

    #map_canvas {
        width: 100%;
        height: 100%;
    }

    .location-block {
        margin-bottom: 20px;
    }

    .location-content {
        font-size: 14px;
        font-weight: 500;
    }

    .location-head {
        margin-bottom: 20px;
    }

    .location-icon {
        font-size: 18px;
        color: #023981;
        padding-right: 6px;
    }

    .location-title {
        font-weight: 600;
        color: #023981;
        font-size: 18px;
        text-transform: uppercase;
        letter-spacing: 2px;
    }

    .info_content {
        background-color: #fff;
        padding: 10px;
    }

    .info_location_name {
        color: #023981;
        font-size: 16px;
        font-weight: 700;
        text-transform: uppercase;
        margin-bottom: 10px;
    }

    .info_location_text {
        margin-bottom: 10px;
        color: #767a7f;
        font-size: 13px;
        font-weight: 500;
        line-height: 20px;
    }

    .info_location_call {
        font-size: 14px;
        color: #2e3133;
        font-weight: 600;
    }

        .info_location_call span {
            padding-right: 8px;
            font-size: 14px;
            color: #023981;
        }

    .mt30 {
        margin-top: 20px;
    }
</style>

<script>

        jQuery(function ($) {
            // Asynchronously Load the map API
            var script = document.createElement('script');
            script.src = "https://maps.googleapis.com/maps/api/js?key=&callback=initialize";
            document.body.appendChild(script);
        });

        function initialize() {
            var map;
            var bounds = new google.maps.LatLngBounds();
            var mapOptions = {
                mapTypeId: 'roadmap'
            };

            // Display a map on the page
            map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
            map.setTilt(45);

            // Multiple Markers

            var markers = [

                @if (ViewBag.lat != null) {
                    <text> ["EU",@ViewBag.lat.Replace(",", "."), @ViewBag.lon.Replace(",", ".")], </text>
            }
                @foreach (var item in Model)
            {
                <text>['@item.nm_pista.ToString()', @item.nr_latitude.ToString().Replace(",","."), @item.nr_longitude.ToString().Replace(",", ".")],</text>
            }

                //['Local 3', -23.630355817243128, -46.65799790278],
                //['Local 4', -23.667613848877686, -46.6719587940728]

            ];
            var infoContent = ' < div class="info_content" > ' +
            '<h3 class="info_location_name">Local 2</h3>' +
                '<p class="info_location_text">Endereço 1</p>' +
                '<p class="info_location_call"><span><i class="fa fa-phone"></i></span>(800) 123-1314</p>' +
                '<a href="#" class="btn-link">Saiba mais</a>' +
                '</div>';
            // Info Window Content
            var infoWindowContent = [
                @if (ViewBag.lat != null) {
                    <text>['<div class="info_content"><h3 class="info_location_name">Eu To aqui hehe</h3><p class="info_location_text">Mas poderia estar andando de sk8, clique em Sk8er ali em baixo rsrs e vai andar</p><p class="info_location_call"></div>'],</text>
                }
                @foreach (var item in Model)
                {
                    <text>['<div class="info_content"><h3 class="info_location_name">@item.nm_pista.ToString()</h3><p class="info_location_text">@item.ds_horario_funcionamento.ToString()</p><p class="info_location_call"><span><i class="fa fa-phone"></i></span>@item.ds_pista.ToString()</p><button type="button" class="btn btn-info btn-sm modal-link" data-toggle="modal" data-targeturl="@Url.Action("Details","Home",new { id = item.id_pista })">Saber mais</button></div>'],</text>
                }
                /*['<div class="info_content">' +
                    '<h3 class="info_location_name">Local 2</h3>' +
                    '<p class="info_location_text">Endereço 1</p>' +
                    '<p class="info_location_call"><span><i class="fa fa-phone"></i></span>(800) 123-1314</p>' +
                    '<a href="#" class="btn-link">Saiba mais</a>' +


                    '</div>'
                ],
                ['<div class="info_content">' +
                    '<h3 class="info_location_name">Local 3</h3>' +
                    '<p class="info_location_text">Endereço 1</p>' +
                    '<p class="info_location_call"><span><i class="fa fa-phone"></i></span>(800) 123-1112</p>' +
                    '<a href="#" class="btn-link">Saiba mais</a>' +


                    '</div>'
                ],
                ['<div class="info_content">' +
                    '<h3 class="info_location_name">Local 4</h3>' +
                    '<p class="info_location_text">Endereço 1</p>' +
                    '<p class="info_location_call"><span><i class="fa fa-phone"></i></span>(800) 123-8910</p>' +
                    '<a href="#" class="btn-link">Saiba mais</a>' +


                    '</div>'
                ]*/
            ];
            // Display multiple markers on a map
            var infoWindow = new google.maps.InfoWindow({ maxWidth: 280 }),
                marker, i;

            // Loop through our array of markers & place each one on the map
            for (i = 0; i < markers.length; i++) {
                var position = new google.maps.LatLng(markers[i][1],
                    markers[i][2], markers[i][3], markers[i][4]);
                bounds.extend(position);
                marker = new google.maps.Marker({
                    icon: {
                        url: "http://maps.google.com/mapfiles/ms/icons/blue-dot.png",
                        labelOrigin: new google.maps.Point(75, 32),
                        size: new google.maps.Size(32, 32),
                        anchor: new google.maps.Point(16, 32)
                    },
                    position: position,
                    map: map,
                    title: markers[i][0]
                });

                // Allow each marker to have an info window
                google.maps.event.addListener(marker, 'mouseover', (function (marker, i) {
                    return function () {
                        infoWindow.setContent(infoWindowContent[i][0]);
                        infoWindow.open(map, marker);
                    }
                })(marker, i));

                // Automatically center the map fitting all markers on the screen
                map.fitBounds(bounds);
            }

            // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
            var tilesloadedListener = google.maps.event.addListener((map), 'tilesloaded', function (event) {
                if (@Model.Count() == 0) {
                    this.setZoom(16);
                }
                google.maps.event.removeListener(tilesloadedListener);
            });

        }

</script>


    <div id="map_wrapper">
        <div id="map_canvas" class="mapping"></div>

    </div>

